/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tpid;

import java.awt.Frame;
import java.io.File;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import net.sf.saxon.s9api.SaxonApiException;
import net.sf.saxon.s9api.XdmItem;
import net.sf.saxon.s9api.XdmValue;
import org.jdom2.Document;

/**
 *
 * @author king_
 */
public class Frame2 extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public Frame2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        FramePesquisar = new javax.swing.JFrame();
        TextFieldGeral = new javax.swing.JTextField();
        Procurar = new javax.swing.JButton();
        OpcaoPesquisa = new javax.swing.JComboBox<>();
        TextFieldPrecoA = new javax.swing.JTextField();
        LabelGeral = new javax.swing.JLabel();
        precoDe = new javax.swing.JLabel();
        TextFieldPrecoDe = new javax.swing.JTextField();
        PrecoA = new javax.swing.JLabel();
        FrameNome = new javax.swing.JFrame();
        Nome = new javax.swing.JTextField();
        Nascimento = new javax.swing.JTextField();
        Morte = new javax.swing.JTextField();
        Nacionalidade = new javax.swing.JTextField();
        generos = new javax.swing.JTextField();
        ocupacoes = new javax.swing.JTextField();
        premios = new javax.swing.JTextField();
        labelInformacoesDoAutor = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        LabelMorte = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        FrameNacionalidade = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        nacional = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaNacionalidade = new javax.swing.JList<>();
        FrameObras = new javax.swing.JFrame();
        jLabel9 = new javax.swing.JLabel();
        LabelNomeAutorObras = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaObras = new javax.swing.JList<>();
        FrameVerAutores = new javax.swing.JFrame();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaVerAutores = new javax.swing.JList<>();
        FrameVerObras = new javax.swing.JFrame();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListaVerObras = new javax.swing.JList<>();
        FrameLivrosPublicados = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ListaLivrosPublicados = new javax.swing.JList<>();
        LabelLivrosPublicados = new javax.swing.JLabel();
        AdicionaAutor = new javax.swing.JButton();
        VerAutores = new javax.swing.JButton();
        VerObras = new javax.swing.JButton();
        Pesquisar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        Menu_Sair = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jTextField2.setToolTipText("Insira o nome do autor");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton1.setText("Adicionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jButton1))
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton1)
                .addGap(33, 33, 33))
        );

        TextFieldGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldGeralActionPerformed(evt);
            }
        });

        Procurar.setText("Pesquisar");
        Procurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcurarActionPerformed(evt);
            }
        });

        OpcaoPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo de pesquisa", "Nome", "Nacionalidade", "Obras", "Mais Premiado", "Livros publicados" }));
        OpcaoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpcaoPesquisaActionPerformed(evt);
            }
        });

        LabelGeral.setText("Editora");

        precoDe.setText("Pre√ßo de:");

        TextFieldPrecoDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldPrecoDeActionPerformed(evt);
            }
        });

        PrecoA.setText("a:");

        javax.swing.GroupLayout FramePesquisarLayout = new javax.swing.GroupLayout(FramePesquisar.getContentPane());
        FramePesquisar.getContentPane().setLayout(FramePesquisarLayout);
        FramePesquisarLayout.setHorizontalGroup(
            FramePesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FramePesquisarLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(FramePesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FramePesquisarLayout.createSequentialGroup()
                        .addComponent(OpcaoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FramePesquisarLayout.createSequentialGroup()
                        .addGroup(FramePesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TextFieldPrecoA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldPrecoDe))
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FramePesquisarLayout.createSequentialGroup()
                        .addComponent(LabelGeral)
                        .addGap(180, 180, 180))))
            .addGroup(FramePesquisarLayout.createSequentialGroup()
                .addGroup(FramePesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FramePesquisarLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(precoDe))
                    .addGroup(FramePesquisarLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(Procurar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FramePesquisarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PrecoA)
                .addGap(189, 189, 189))
        );
        FramePesquisarLayout.setVerticalGroup(
            FramePesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FramePesquisarLayout.createSequentialGroup()
                .addContainerGap(156, Short.MAX_VALUE)
                .addComponent(OpcaoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(LabelGeral)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(precoDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldPrecoDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PrecoA)
                .addGap(2, 2, 2)
                .addComponent(TextFieldPrecoA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Procurar)
                .addGap(22, 22, 22))
        );

        Nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeActionPerformed(evt);
            }
        });

        labelInformacoesDoAutor.setText("Informa√ß√µes do autor:");

        jLabel2.setText("Nome");

        jLabel3.setText("Nascimento");

        LabelMorte.setText("Morte");

        jLabel5.setText("Nacionalidade");

        jLabel6.setText("Generos-Literarios");

        jLabel7.setText("Ocupa√ß√µes");

        jLabel8.setText("Premios");

        javax.swing.GroupLayout FrameNomeLayout = new javax.swing.GroupLayout(FrameNome.getContentPane());
        FrameNome.getContentPane().setLayout(FrameNomeLayout);
        FrameNomeLayout.setHorizontalGroup(
            FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameNomeLayout.createSequentialGroup()
                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(FrameNomeLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelInformacoesDoAutor)
                        .addGap(78, 78, 78))
                    .addGroup(FrameNomeLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FrameNomeLayout.createSequentialGroup()
                                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGap(27, 27, 27)
                                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Nascimento)
                                    .addGroup(FrameNomeLayout.createSequentialGroup()
                                        .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Nacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Nome, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FrameNomeLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(generos))
                            .addGroup(FrameNomeLayout.createSequentialGroup()
                                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(premios, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                    .addComponent(ocupacoes))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelMorte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Morte, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameNomeLayout.setVerticalGroup(
            FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameNomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelInformacoesDoAutor)
                .addGap(26, 26, 26)
                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FrameNomeLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FrameNomeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Morte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelMorte))
                        .addGap(10, 10, 10)))
                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(Nacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ocupacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FrameNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(premios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jLabel4.setText("Autores de nacionalidade:");

        jScrollPane1.setViewportView(ListaNacionalidade);

        javax.swing.GroupLayout FrameNacionalidadeLayout = new javax.swing.GroupLayout(FrameNacionalidade.getContentPane());
        FrameNacionalidade.getContentPane().setLayout(FrameNacionalidadeLayout);
        FrameNacionalidadeLayout.setHorizontalGroup(
            FrameNacionalidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameNacionalidadeLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(FrameNacionalidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FrameNacionalidadeLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nacional)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        FrameNacionalidadeLayout.setVerticalGroup(
            FrameNacionalidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameNacionalidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FrameNacionalidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nacional))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabel9.setText("Obras do Autor:");

        jScrollPane2.setViewportView(ListaObras);

        javax.swing.GroupLayout FrameObrasLayout = new javax.swing.GroupLayout(FrameObras.getContentPane());
        FrameObras.getContentPane().setLayout(FrameObrasLayout);
        FrameObrasLayout.setHorizontalGroup(
            FrameObrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameObrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FrameObrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FrameObrasLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(31, 31, 31)
                        .addComponent(LabelNomeAutorObras)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
                .addContainerGap())
        );
        FrameObrasLayout.setVerticalGroup(
            FrameObrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameObrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FrameObrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(LabelNomeAutorObras))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel11.setText("Autores");

        jScrollPane3.setViewportView(ListaVerAutores);

        javax.swing.GroupLayout FrameVerAutoresLayout = new javax.swing.GroupLayout(FrameVerAutores.getContentPane());
        FrameVerAutores.getContentPane().setLayout(FrameVerAutoresLayout);
        FrameVerAutoresLayout.setHorizontalGroup(
            FrameVerAutoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameVerAutoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FrameVerAutoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                    .addGroup(FrameVerAutoresLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        FrameVerAutoresLayout.setVerticalGroup(
            FrameVerAutoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameVerAutoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel12.setText("Obras");

        jScrollPane4.setViewportView(ListaVerObras);

        javax.swing.GroupLayout FrameVerObrasLayout = new javax.swing.GroupLayout(FrameVerObras.getContentPane());
        FrameVerObras.getContentPane().setLayout(FrameVerObrasLayout);
        FrameVerObrasLayout.setHorizontalGroup(
            FrameVerObrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameVerObrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FrameVerObrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(FrameVerObrasLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        FrameVerObrasLayout.setVerticalGroup(
            FrameVerObrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameVerObrasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("Livros publicados:");

        jScrollPane5.setViewportView(ListaLivrosPublicados);

        javax.swing.GroupLayout FrameLivrosPublicadosLayout = new javax.swing.GroupLayout(FrameLivrosPublicados.getContentPane());
        FrameLivrosPublicados.getContentPane().setLayout(FrameLivrosPublicadosLayout);
        FrameLivrosPublicadosLayout.setHorizontalGroup(
            FrameLivrosPublicadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameLivrosPublicadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FrameLivrosPublicadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(FrameLivrosPublicadosLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(122, 122, 122)
                        .addComponent(LabelLivrosPublicados)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        FrameLivrosPublicadosLayout.setVerticalGroup(
            FrameLivrosPublicadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameLivrosPublicadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FrameLivrosPublicadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(LabelLivrosPublicados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AdicionaAutor.setText("Adicionar Autor");
        AdicionaAutor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdicionaAutorMouseClicked(evt);
            }
        });
        AdicionaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionaAutorActionPerformed(evt);
            }
        });

        VerAutores.setText("Ver Autores");
        VerAutores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerAutoresActionPerformed(evt);
            }
        });

        VerObras.setText("Ver Obras");
        VerObras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerObrasActionPerformed(evt);
            }
        });

        Pesquisar.setText("Pesquisar");
        Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PesquisarrActionPerformed(evt);
            }
        });

        Menu.setText("Menu");

        Menu_Sair.setText("Sair");
        Menu_Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_SairActionPerformed(evt);
            }
        });
        Menu.add(Menu_Sair);

        jMenuBar1.add(Menu);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VerAutores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AdicionaAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VerObras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Pesquisar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(147, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(AdicionaAutor)
                .addGap(18, 18, 18)
                .addComponent(VerAutores)
                .addGap(18, 18, 18)
                .addComponent(VerObras)
                .addGap(18, 18, 18)
                .addComponent(Pesquisar)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AdicionaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionaAutorActionPerformed
        jDialog1.setSize(325, 155);
        jDialog1.setLocation(200, 200);
        jDialog1.setVisible(true);
                    }//GEN-LAST:event_AdicionaAutorActionPerformed


    private void VerAutoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerAutoresActionPerformed
        // TODO add your handling code here:
        String filePath = "escritores.xml";

        try {
            String content = XML.readFileToString(filePath);
            FrameVerAutores.setSize(1100, 500);
            FrameVerAutores.setLocation(200, 200);
            FrameVerAutores.setVisible(true);

            DefaultListModel<String> listaModelo = new DefaultListModel<>();

            // Dividir o conte√∫do em linhas individuais
            String[] linhas = content.split("\\n");

            // Adicionar cada linha ao modelo da lista
            for (String linha : linhas) {
                listaModelo.addElement(linha);
            }

            ListaVerAutores.setModel(listaModelo);
        } catch (IOException e) {

        }
    }//GEN-LAST:event_VerAutoresActionPerformed

    private void Menu_SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_SairActionPerformed
        File arquivo = new File("escritores.xml");
        arquivo.delete();
        arquivo = new File("escritores.txt");
        arquivo.delete();

        arquivo = new File("obra.txt");
        arquivo.delete();

        arquivo = new File("obras.txt");
        arquivo.delete();

        arquivo = new File("obras.xml");
        arquivo.delete();

System.exit(0);    }//GEN-LAST:event_Menu_SairActionPerformed

    private void AdicionaAutorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdicionaAutorMouseClicked

    }//GEN-LAST:event_AdicionaAutorMouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            String nome;

            nome = jTextField2.getText();

            Escritor E = Wrappers.criaEscritor(nome);
            String[] urlobras = Wrappers.obtemurlObras(nome);
            Document doc = XML.lerDocumentoXML("obras.xml");

            for (int i = 0; i < urlobras.length && urlobras[i] != null; i++) {
                Obras obra = Wrappers.criaObras(urlobras[i], nome, i);
                doc = ModeloG.adicionaObra(obra, doc);
                XML.escreverDocumentoParaFicheiro(doc, "obras.xml");
            }
            doc = XML.lerDocumentoXML("escritores.xml");
            doc = ModeloG.adicionaEscritor(E, doc);
            XML.escreverDocumentoParaFicheiro(doc, "escritores.xml");
            jTextField2.setText("");

        } catch (IOException ex) {
            Logger.getLogger(Frame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SaxonApiException ex) {
            Logger.getLogger(Frame2.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDialog1.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TextFieldGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldGeralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldGeralActionPerformed

    private void ProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcurarActionPerformed
        try {
            // TODO add your handling code here:
            String texto;
            texto = TextFieldGeral.getText();
            TextFieldGeral.setText("");

            String opcao;
              opcao = (String) OpcaoPesquisa.getSelectedItem();
            OpcaoPesquisa.setSelectedItem("Tipo de pesquisa");
            switch (opcao) {
                case "Nome":
                    String xp = "//escritor[contains(., '" + texto + "')]/datanascimento";
                    XdmValue res = XPathFunctions.executaXpath(xp, "escritores.xml");

                    if (res == null || res.size() == 0 || "".equals(texto) ) {
                        TextFieldGeral.setText("");
                    } else {
                        FrameNome.setSize(1100, 400);
                        FrameNome.setLocation(200, 200);
                        FrameNome.setVisible(true);
                        Morte.setVisible(false);
                        LabelMorte.setVisible(false);

                        Nome.setText(texto);
                        Nascimento.setText(res.itemAt(0).getStringValue());

                        //morte
                        xp = "//escritor[contains(., '" + texto + "')]/datamorte";

                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0) {

                        } else {
                            Morte.setVisible(true);
                            LabelMorte.setVisible(true);
                            Morte.setText(res.itemAt(0).getStringValue());
                        }

                        //nacionalidade
                        xp = "//escritor[contains(., '" + texto + "')]/nacionalidade";

                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0) {
                        } else {
                            Nacionalidade.setText(res.itemAt(0).getStringValue());
                        }

                        //generos
                        xp = "//escritor[contains(., '" + texto + "')]/generos-literarios";

                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0) {
                        } else {
                            generos.setText(res.itemAt(0).getStringValue());
                        }

                        //ocupacoes
                        xp = "//escritor[contains(., '" + texto + "')]/ocupacoes";

                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0) {
                        } else {
                            ocupacoes.setText(res.itemAt(0).getStringValue());
                        }

                        //premios
                        xp = "//escritor[contains(., '" + texto + "')]/premios";

                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0) {
                        } else {
                            premios.setText(res.itemAt(0).getStringValue());
                        }

                    }

                    break;
                case "Nacionalidade":
                    xp = "//escritor[nacionalidade='" + texto + "']/text()";

                    res = XPathFunctions.executaXpath(xp, "escritores.xml");

                    if (res == null || res.size() == 0 || "".equals(texto) ) {
                        TextFieldGeral.setText("");
                    } else {
                        FrameNacionalidade.setSize(400, 300);
                        FrameNacionalidade.setLocation(200, 200);
                        FrameNacionalidade.setVisible(true);

                        DefaultListModel<String> listaModelo = new DefaultListModel<>();
                        for (XdmItem item : res) {
                            String linha = item.getStringValue().trim(); // Remover espa√ßos em branco no in√≠cio e no fim da linha
                            if (!linha.isEmpty()) { // Verificar se a linha n√£o est√° vazia
                                listaModelo.addElement(linha);
                            }
                        }
                        ListaNacionalidade.setModel(listaModelo);
                        nacional.setText(texto);

                    }
                    break;
                case "Obras":
                    xp = "//obra[contains(autor, '" + texto + "')]/text()";

                    res = XPathFunctions.executaXpath(xp, "obras.xml");
                    String s = XPathFunctions.listaResultado(res);

                    if (res == null || "".equals(texto) ) {
                        TextFieldGeral.setText("");
                    } else if (res.size() == 0 || "".equals(texto) ) {
                        LabelNomeAutorObras.setText("Sem resultados");
                    } else {
                        FrameObras.setSize(400, 500);
                        FrameObras.setLocation(200, 200);
                        FrameObras.setVisible(true);
                        LabelNomeAutorObras.setText(texto);
                        DefaultListModel<String> listaModelo = new DefaultListModel<>();
                        // Dividir o conte√∫do em linhas individuais
                        String[] linhas = s.split("\\n");

                        // Adicionar cada linha ao modelo da lista
                        for (String linha : linhas) {
                            linha = linha.trim(); // Remover espa√ßos em branco no in√≠cio e no fim da linha
                            if (!linha.isEmpty()) { // Verificar se a linha n√£o est√° vazia
                                listaModelo.addElement(linha);
                            }
                        }

                        ListaObras.setModel(listaModelo);
                    }

                    break;
                case "Mais Premiado":
                    int maxPremios = 0;
                    int escritorMaisPremios = 0;
                    int id = 1;

                    while (true) {
                        xp = "//escritor[@id=" + id + "]/premios/text()";
                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0 ) {
                            TextFieldGeral.setText("");
                            break;
                        } else {
                            DefaultListModel<String> listaModelo = new DefaultListModel<>();
                            for (XdmItem item : res) {
                                String premios = item.getStringValue().trim();
                                if (!premios.isEmpty()) {
                                    String[] linhas = premios.split(",");
                                    for (String linha : linhas) {
                                        linha = linha.trim();
                                        if (!linha.isEmpty()) {
                                            listaModelo.addElement(linha);
                                        }
                                    }
                                }

                            }

                            if (listaModelo.size() > maxPremios) {
                                maxPremios = listaModelo.size();
                                escritorMaisPremios = id;
                            }
                        }
                        id++;
                    }

                    String NomePremiado = null;
                    xp = "//escritor[@id= " + escritorMaisPremios + "]/text()";
                    res = XPathFunctions.executaXpath(xp, "escritores.xml");
                    if (res == null || res.size() == 0 ) {
                    } else {
                        NomePremiado = res.itemAt(0).getStringValue();
                    }

                    texto = NomePremiado;
                    xp = "//escritor[contains(., '" + texto + "')]/datanascimento";

                    res = XPathFunctions.executaXpath(xp, "escritores.xml");

                    if (res == null || res.size() == 0) {
                        TextFieldGeral.setText("");
                    } else {
                        labelInformacoesDoAutor.setText("Escritor mais premiado");
                        FrameNome.setSize(1100, 400);
                        FrameNome.setLocation(200, 200);
                        FrameNome.setVisible(true);
                        Morte.setVisible(false);
                        LabelMorte.setVisible(false);

                        Nome.setText(texto);
                        Nascimento.setText(res.itemAt(0).getStringValue());

                        //morte
                        xp = "//escritor[contains(., '" + texto + "')]/datamorte";
                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0) {

                        } else {
                            Morte.setVisible(true);
                            LabelMorte.setVisible(true);
                            Morte.setText(res.itemAt(0).getStringValue());
                        }

                        //nacionalidade
                        xp = "//escritor[contains(., '" + texto + "')]/nacionalidade";

                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0) {
                        } else {
                            Nacionalidade.setText(res.itemAt(0).getStringValue());
                        }

                        //generos
                        xp = "//escritor[contains(., '" + texto + "')]/generos-literarios";

                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0) {
                        } else {
                            generos.setText(res.itemAt(0).getStringValue());
                        }

                        //ocupacoes
                        xp = "//escritor[contains(., '" + texto + "')]/ocupacoes";

                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0) {
                        } else {
                            ocupacoes.setText(res.itemAt(0).getStringValue());
                        }

                        //premios
                        xp = "//escritor[contains(., '" + texto + "')]/premios";

                        res = XPathFunctions.executaXpath(xp, "escritores.xml");
                        if (res == null || res.size() == 0) {
                        } else {
                            premios.setText(res.itemAt(0).getStringValue());
                        }

                    }

                    break;

                case "Livros publicados":
                    String precoDe = TextFieldPrecoDe.getText();
                    String precoA = TextFieldPrecoA.getText();

                    double precoDeValor = Double.parseDouble(precoDe);
                    double precoAValor = Double.parseDouble(precoA);
                    xp = "//obra[contains(editora, '" + texto + "')  and number(translate(replace(Pre√ßo, '‚Ç¨', ''), ',', '.')) >= " + precoDeValor + " and number(translate(replace(Pre√ßo, '‚Ç¨', ''), ',', '.')) <= " + precoAValor + "]/text()";

                    res = XPathFunctions.executaXpath(xp, "obras.xml");
                    String resultado = XPathFunctions.listaResultado(res);

                    if (res == null) {
                        TextFieldGeral.setText("");

                    } else if (res.size() == 0) {
                        FrameLivrosPublicados.setSize(400, 500);
                        FrameLivrosPublicados.setLocation(200, 200);
                        FrameLivrosPublicados.setVisible(true);
                        LabelLivrosPublicados.setText("Sem resultados");

                    } else {

                        FrameLivrosPublicados.setSize(400, 500);
                        FrameLivrosPublicados.setLocation(200, 200);
                        FrameLivrosPublicados.setVisible(true);
                        LabelLivrosPublicados.setText(texto);
                        DefaultListModel<String> listaModelo = new DefaultListModel<>();
                        // Dividir o conte√∫do em linhas individuais
                        String[] linhas = resultado.split("\\n");

                        // Adicionar cada linha ao modelo da lista
                        for (String linha : linhas) {
                            linha = linha.trim(); // Remover espa√ßos em branco no in√≠cio e no fim da linha
                            if (!linha.isEmpty()) { // Verificar se a linha n√£o est√° vazia
                                listaModelo.addElement(linha);
                            }
                        }

                        ListaLivrosPublicados.setModel(listaModelo);
                    }

                    break;
            }

        } catch (SaxonApiException ex) {
            Logger.getLogger(Frame2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ProcurarActionPerformed

    private void OpcaoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpcaoPesquisaActionPerformed
        // TODO add your handling code here:
        String opcao;
        opcao = (String) OpcaoPesquisa.getSelectedItem();
        if (!"Tipo de pesquisa".equals(opcao)) {
            TextFieldGeral.setVisible(true);
            Procurar.setVisible(true);
        } else {
            TextFieldGeral.setVisible(false);
            Procurar.setVisible(false);
        }

        switch (opcao) {
            case "Tipo de pesquisa":
                LabelGeral.setVisible(false);
                            
                
                PrecoA.setVisible(false);
             
                TextFieldPrecoA.setVisible(false);
                precoDe.setVisible(false);
              
                TextFieldPrecoDe.setVisible(false);
                break;
            case "Nome":
                FramePesquisar.setSize(400, 200);
                LabelGeral.setVisible(false);
                PrecoA.setVisible(false);
                
                TextFieldPrecoA.setVisible(false);
                precoDe.setVisible(false);
                TextFieldPrecoDe.setVisible(false);

                LabelGeral.setVisible(true);
                LabelGeral.setText("Autor a pesquisar");

                break;
            case "Nacionalidade":
                FramePesquisar.setSize(400, 200);
                LabelGeral.setVisible(false);
                PrecoA.setVisible(false);
                TextFieldPrecoA.setVisible(false);
                precoDe.setVisible(false);
                TextFieldPrecoDe.setVisible(false);

                LabelGeral.setVisible(true);
                LabelGeral.setText("Nacionalidade");
                break;
            case "Mais Premiado":
                FramePesquisar.setSize(400, 200);
                LabelGeral.setVisible(false);
                PrecoA.setVisible(false);
                TextFieldPrecoA.setVisible(false);
                precoDe.setVisible(false);
                TextFieldPrecoDe.setVisible(false);

                TextFieldGeral.setVisible(false);

                break;
            case "Livros publicados":
                TextFieldPrecoA.setText("");
                TextFieldPrecoDe.setText("");
                TextFieldGeral.setText("");
                
                FramePesquisar.setSize(400, 300);

                LabelGeral.setVisible(true);
                LabelGeral.setText("Editora a pesquisar");
                TextFieldGeral.setVisible(true);
                PrecoA.setVisible(true);
                TextFieldPrecoA.setVisible(true);
                precoDe.setVisible(true);
                TextFieldPrecoDe.setVisible(true);

                break;
            case "Obras":
                FramePesquisar.setSize(400, 200);
                LabelGeral.setVisible(false);
                PrecoA.setVisible(false);
                TextFieldPrecoA.setVisible(false);
                precoDe.setVisible(false);
                TextFieldPrecoDe.setVisible(false);

                LabelGeral.setVisible(true);
                LabelGeral.setText("Nome do Autor");
                break;

        }

    }//GEN-LAST:event_OpcaoPesquisaActionPerformed

    private void NomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomeActionPerformed

    private void PesquisarrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PesquisarrActionPerformed
        // TODO add your handling code here:
        FramePesquisar.setSize(400, 200);
        FramePesquisar.setLocation(200, 200);
        FramePesquisar.setVisible(true);
        String opcao;
        opcao = (String) OpcaoPesquisa.getSelectedItem();
        if ("Tipo de pesquisa".equals(opcao)) {
            TextFieldGeral.setVisible(false);
            Procurar.setVisible(false);
        } else {
            TextFieldGeral.setVisible(true);
            Procurar.setVisible(true);
        }

        if (!"Livros publicados".equals(opcao)) {
            FramePesquisar.setSize(400, 200);
            LabelGeral.setVisible(false);
            PrecoA.setVisible(false);
            TextFieldPrecoA.setVisible(false);
            precoDe.setVisible(false);
            TextFieldPrecoDe.setVisible(false);
        } else {
            FramePesquisar.setSize(400, 300);
            LabelGeral.setVisible(true);
            TextFieldGeral.setVisible(true);
            PrecoA.setVisible(true);
            TextFieldPrecoA.setVisible(true);
            precoDe.setVisible(true);
            TextFieldPrecoDe.setVisible(true);
        }

    }//GEN-LAST:event_PesquisarrActionPerformed

    private void VerObrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerObrasActionPerformed
        // TODO add your handling code here:
        String filePath = "obras.xml";

        try {
            String content = XML.readFileToString(filePath);
            FrameVerObras.setSize(400, 500);
            FrameVerObras.setLocation(200, 200);
            FrameVerObras.setVisible(true);

            DefaultListModel<String> listaModelo = new DefaultListModel<>();

            // Dividir o conte√∫do em linhas individuais
            String[] linhas = content.split("\\n");

            // Adicionar cada linha ao modelo da lista
            for (String linha : linhas) {
                listaModelo.addElement(linha);
            }

            ListaVerObras.setModel(listaModelo);
        } catch (IOException e) {

        }
    }//GEN-LAST:event_VerObrasActionPerformed

    private void TextFieldPrecoDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldPrecoDeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldPrecoDeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdicionaAutor;
    private javax.swing.JFrame FrameLivrosPublicados;
    private javax.swing.JFrame FrameNacionalidade;
    private javax.swing.JFrame FrameNome;
    private javax.swing.JFrame FrameObras;
    private javax.swing.JFrame FramePesquisar;
    private javax.swing.JFrame FrameVerAutores;
    private javax.swing.JFrame FrameVerObras;
    private javax.swing.JLabel LabelGeral;
    private javax.swing.JLabel LabelLivrosPublicados;
    private javax.swing.JLabel LabelMorte;
    private javax.swing.JLabel LabelNomeAutorObras;
    private javax.swing.JList<String> ListaLivrosPublicados;
    private javax.swing.JList<String> ListaNacionalidade;
    private javax.swing.JList<String> ListaObras;
    private javax.swing.JList<String> ListaVerAutores;
    private javax.swing.JList<String> ListaVerObras;
    private javax.swing.JMenu Menu;
    private javax.swing.JMenuItem Menu_Sair;
    private javax.swing.JTextField Morte;
    private javax.swing.JTextField Nacionalidade;
    private javax.swing.JTextField Nascimento;
    private javax.swing.JTextField Nome;
    private javax.swing.JComboBox<String> OpcaoPesquisa;
    private javax.swing.JButton Pesquisar;
    private javax.swing.JLabel PrecoA;
    private javax.swing.JButton Procurar;
    private javax.swing.JTextField TextFieldGeral;
    private javax.swing.JTextField TextFieldPrecoA;
    private javax.swing.JTextField TextFieldPrecoDe;
    private javax.swing.JButton VerAutores;
    private javax.swing.JButton VerObras;
    private javax.swing.JTextField generos;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel labelInformacoesDoAutor;
    private javax.swing.JLabel nacional;
    private javax.swing.JTextField ocupacoes;
    private javax.swing.JLabel precoDe;
    private javax.swing.JTextField premios;
    // End of variables declaration//GEN-END:variables
}
